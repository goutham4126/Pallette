// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(uuid())
  clerkUserId     String @unique
  name            String?
  email           String @unique
  imageUrl        String?
  manualprojects  Manualproject[]
  purchases       Purchase[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Manualproject {
  id              String @id @default(uuid())
  title           String @unique
  htmlCode        String?
  cssCode         String?
  jsCode          String?
  price           Float?        
  details         String?
  isListed        Boolean?        @default(false)
  creatorId       String
  collaborators   Collaborator[]
  creator         User    @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  purchases       Purchase[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
  
model Purchase {
  id           String        @id @default(uuid())
  buyer        User          @relation(fields: [buyerId], references: [id])
  buyerId      String
  template     Manualproject @relation(fields: [templateId], references: [id])
  templateId   String
  purchasedAt  DateTime      @default(now())

  @@unique([buyerId, templateId])
}


model Collaborator {
  id          String        @id @default(uuid())
  email       String        
  project     Manualproject @relation(fields: [projectId], references: [id])
  projectId   String
  accessType  AccessType    @default(NONE)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@unique([email, projectId]) 
}

enum AccessType {
  NONE
  VIEW
  EDIT
}







